# Rigol_DG4000_ChN.db

# Mark Rivers
# March 11, 2025

# Database file for Rigol DG4000 series Arbitrary Waveform Generator
# This file contains the global records for the AWG, not the channel-specific records.
#
# This support uses StreamDevice.
# It supports many of the features of the device.  
# - It does not current support Modulation
# - It only supports the basic internal waveforms (sin, square, ramp, pulse, noise, and harmonic.), plus user-defined.
#
# Macro parameters required when loading this database:
#  P = Record name prefix
#  R = Base record name
#  PORT = Name of asyn port for the VXI-11 driver for the device
#


###
### Model
###
record(waveform,"$(P)$(R)Model_RBV") {
    field(PINI, "YES")
    field(DTYP, "stream")
    field(INP,  "@Rigol_DG4000.proto getLongString(*IDN) $(PORT)")
    field(FTVL, "CHAR")
    field(NELM, 256)
}

###
### Status control
###
record(bo,"$(P)$(R)ReadStatusScan") {
    field(SCAN, "Passive")
    field(FLNK, "$(P)$(R)ReadStatus.PROC")
}

record(bo,"$(P)$(R)ReadStatus") {
    field(PINI, "YES")
    field(FLNK, "$(P)$(R)Error_RBV.PROC")
}

record(waveform,"$(P)$(R)Error_RBV") {
    field(DTYP, "stream")
    field(INP,  "@Rigol_DG4000.proto getLongString(:SYST:ERR) $(PORT)")
    field(FTVL, "CHAR")
    field(NELM, 256)
}

record(bo,"$(P)$(R)ClearStatus") {
    field(DTYP, "stream")
    field(OUT,  "@Rigol_DG4000.proto setNone(*CLS) $(PORT)")
}

###
### Asyn record
###
record(asyn,"$(P)$(R)Asyn") {
    field(PORT, "$(PORT)")
    field(ADDR, "$(ADDR)")
}

